{
  "inventory" : {
    "add stack to slot" : "$inv$.setItem($slot$, $stack$);",
    "create" : "Inventory $inv$ = Bukkit.createInventory(null, $size$, $name$);",
    "close" : "Bukkit.getScheduler().runTask(plugin, () -> player.closeInventory());"
  },
  "comments":{
    "init comment":"/*\nCode for this inventory generated by [official name of our project here].\nCreated by Zombie_Striker and Tecno_Wizard\n*/\n/** HOW TO ADD THIS TO YOUR CODE\n1. Create a new class and give it the same name as the generated code.\n2. Copy and paste the code into that class.\n3. Go to your main class that extends JavaPlugin and create a new field at the top of the class. This will hold the instance of the generated class. \n4. Inside the main class's onEnable method, set that field equal to a new instance of the generated class.\n\nOnce you have done these four steps, you can access your inventory by using\n   -[FieledName].getInventory()\nWhere the [FieldName] is the field from step 3.\n**/\nNeed to duplicate the inventory in case someone edits it? Use the cloneInventory method\n\n"
  },
  "itemstack" : {
    "create stack" : "ItemStack $stack$;",
    "create no data" : "$stack$ = new ItemStack($material$, $count$);",
    "create with data" : "$stack$ = new ItemStack(Material.$material$, $count$, $data$);",
    "set size" : "$stack$.setAmount($amount$)",
    "meta formatter" : "public ItemStack formatMeta(ItemStack itemstack, String displayName, List<String> lore, Map<Enchantment,Integer> enchants) {\nItemMeta meta = itemstack.getItemMeta();\nmeta.setDisplayName(displayName);\nfor(Entry<Enchantment, Integer> enchant : enchants.entrySet()) {\nmeta.addEnchant(enchant.getKey(), enchant.getValue(), true);\n}\nmeta.setLore(lore);\nitemstack.setItemMeta(meta);\nreturn itemstack;\n}",
    "call formatter" : "formatMeta($stack$, \"$name$\", $loreBuffer$, $enchantments$);"
  },
  "lore" : {
    "create lore buffer" : "List<String> loreBuffer = new ArrayList<>();",
    "add item to lore buffer" : "loreBuffer.add(\"$lore_line$\");",
    "clear lore buffer" : "lorebuffer.clear();"
  },
  "enchantment" : {
    "create ench buffer" : "Map<Enchantment,Integer> enchBuffer = new HashMap<Enchantment,Integer>();",
    "add item to ench buffer" : "loreBuffer.put(new Enchantment($ench$,$power$),$power$);",
    "clear" : "enchBuffer.clear();"
  },
  "extra" : {
    "init inv" : "public void initInventory(){",
    "class constructor": "public class $classname$Factory implements Listener{\nInventory $inv$;\n\n public $classname$Factory(JavaPlugin main){\n$inv$ = Bukkit.createInventory(null, $size$, \"$name$\");\nBukkit.getPluginManager().registerEvents(this,main);\ninitInventory();\n}\n\npublic Inventory getInventory(){\nreturn $inv$;\n}\n",
    "listener top" : "@EventHandler\npublic void onClick(InventoryClickEvent e){\nif(e.getInventory().getName().equals($inv$.getName())){\ne.setCancelled(true);\nif (e.getCurrentItem() != null) {\n",
    "listener bottom" : "}\n}",
    "imports" : "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\nimport org.bukkit.Bukkit;\nimport org.bukkit.Material;\nimport org.bukkit.enchantments.Enchantment;\nimport org.bukkit.event.EventHandler;\nimport org.bukkit.event.Listener;\nimport org.bukkit.event.inventory.InventoryClickEvent;\nimport org.bukkit.inventory.Inventory;\nimport org.bukkit.inventory.ItemStack;\nimport org.bukkit.inventory.meta.ItemMeta;\nimport org.bukkit.plugin.java.JavaPlugin;",
    "clone method" : "public Inventory cloneInventory(Inventory inv) {\nInventory clone = Bukkit.createInventory(inv.getHolder(), inv.getSize(), inv.getName());\nclone.setContents(inv.getContents().clone());\nreturn clone;\n}"
  }
}
